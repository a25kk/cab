import getpass
from fabric.api import task
from fabric.api import cd
from fabric.api import env
from fabric.api import run

from fabric.contrib import project as fab_project

from ade25.fabfiles import project

from slacker import Slacker
slack = Slacker('${settings:slack-api-token}')

env.use_ssh_config = True
env.forward_agent = True
env.port = '22'
env.user = 'root'
env.hosts = ['${fabric:host}']
env.hostname = '${fabric:host}'
env.webserver = '${fabric:webserver}'
env.code_root = '${fabric:directory}'
env.local_root = '${buildout:directory}'
env.sitename = 'cab'
env.code_user = 'root'
env.prod_user = 'www'
env.actor = ${settings:username}


@task
def deploy(actor=None):
    """ Deploy current master to production server """
    opts = dict(
        sitename=env.get('sitename'),
        hostname=env.get('hostname'),
        actor=actor or env.get('actor') or getpass.getuser(),
    )
    project.site.update()
    project.site.restart()
    msg = '[%(hostname)s] *%(sitename)s* deployed by %(actor)s' % opts
    user = 'fabric'
    icon = ':shipit:'
    slack.chat.post_message('#general', msg, username=user, icon_emoji=icon)


@task
def deploy_full(actor=None):
    """ Deploy current master to production and run buildout """
    opts = dict(
        sitename=env.get('sitename'),
        hostname=env.get('hostname'),
        actor=actor or env.get('actor') or getpass.getuser(),
    )
    project.site.update()
    project.site.build()
    project.site.restart()
    msg = '[%(hostname)s] *%(sitename)s* deployed by %(actor)s' % opts
    user = 'fabric'
    icon = ':shipit:'
    slack.chat.post_message('#general', msg, username=user, icon_emoji=icon)


@task
def rebuild(actor=None):
    """ Deploy current master to production and run buildout """
    opts = dict(
        sitename=env.get('sitename'),
        hostname=env.get('hostname'),
        actor=actor or env.get('actor') or getpass.getuser(),
    )
    project.site.update()
    project.site.build_full()
    project.site.restart()
    msg = '[%(hostname)s] *%(sitename)s* rebuild by %(actor)s' % opts
    user = 'fabric'
    icon = ':shipit:'
    slack.chat.post_message('#general', msg, username=user, icon_emoji=icon)


@task
def get_data():
    """ Copy live database for local development """
    project.db.download()


@task
def get_backup(path=None):
    """ Database backup download """
    fab_project.rsync_project(
        remote_dir='/opt/backups/${plone-site:site-id}/zipbackups/*',
        local_dir="${backup:ziplocation}",
        upload=False,
        exclude=['*.tmp', '*.old', '*.lock']
    )
    fab_project.rsync_project(
        remote_dir='/opt/backups/${plone-site:site-id}/backups/blobzip/*',
        local_dir="${backup:blobziplocation}",
        upload=False,
        exclude=['*.layout']
    )


@task
def ctl(*cmd):
    """Runs an arbitrary supervisorctl command."""
    with cd(env.code_root):
        run('nice bin/supervisorctl ' + ' '.join(cmd))
